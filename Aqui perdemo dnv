#Question 1:

def search_insert(lista, position):
    first_position = 0
    final_position = len(lista) - 1
   
    while first_position <= final_position:
        half = (first_position + final_position)//2
        if lista[half] == position:
            return half
        elif lista[half] <= position:
            first_position = half + 1
        else:
            final_position = half - 1
    return final_position + 1

search_insert([1, 2, 3, 5, 7], 6)


#Question 2:
#a)
def triangulo_pascal(n):
    triangle = []
    for i in range(n):
        line = [1]*(i + 1)
       
        for j in range(1, i):
          line[j] = triangle[i - 1][j - 1] + triangle[i - 1][j]
        triangle.append(line)
    return triangle
  
for linha in triangulo_pascal(6):
   print(linha)

#b)

# A complexidade de tempo é O(n²).




#Questão 4:

def polynomial(poly):
    coefficients = {}
    
    # Remove espaços em branco e substituir '−' por '-'
    poly = poly.replace(' ', '')
    
    # Dividir o polinômio em termos
    terms = []
    current_term = ''
    
    # Loop para separar os termos
    i = 0
    while i < len(poly):
        if poly[i] == '+' or poly[i] == '-':
            # Adiciona o termo atual à lista de termos
            if current_term != '':
                terms.append(current_term)
            # Inicia um novo termo com o sinal
            current_term = poly[i]
        else:
            # Continua a construir o termo atual
            current_term += poly[i]
        i += 1
    
    # Adiciona o último termo à lista de termos
    if current_term != '':
        terms.append(current_term)
    
    # Processa cada termo para extrair coeficiente e grau
    for term in terms:
        if 'x' in term:
            if '^' in term:
                coef, power = term.split('x^')
                if coef == '' or coef == '+':
                    coef = '1'
                coefficients[int(power)] = int(coef)
            else:
                if term == 'x':
                    coef = '1'
                elif term == '-x':
                    coef = '-1'
                else:
                    coef = term.replace('x', '')
                    if coef == '' or coef == '+':
                        coef = '1'
                coefficients[1] = int(coef)
        else:
            # Termo constante
            coefficients[0] = int(term)
    
    return coefficients
polynomial('2x^3+3x^2-4x+5')
